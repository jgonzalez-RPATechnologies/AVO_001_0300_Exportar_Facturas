<Activity mc:Ignorable="sap sap2010" x:Class="CreateXML_Avoris" this:CreateXML_Avoris.in_Data="[New Dictionary(Of String, Object) From {&#xA;&#x9;{&quot;BatchIdentifier&quot;, &quot;asdf-43?&quot;}&#xA;}]" this:CreateXML_Avoris.in_Debug="True" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sx="clr-namespace:System.Xml;assembly=System.Private.Xml" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Private.Xml.Linq" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Data" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_Data" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_Debug" Type="InArgument(x:Boolean)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>1234,3900</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="33">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Xml</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Xml.XPath</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Security</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="64">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Private.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Xml.XPath.XDocument</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="******** DESCRIPCIÓN ********&#xA;Cumplimenta y guarda un fichero XML según los datos de entrada, siguiendo las especificaciones del cliente.&#xA;&#xA;******** REQUISITOS ********&#xA;Requiere el paquete Newtonsoft.Json&#xA;&#xA;******** ENTRADAS ********&#xA;- in_data&lt;Dictionary&lt;string, Object&gt;&gt;: Datos de entrada del módulo.&#xA;        - AttachPdfPath &lt;string&gt;: Ruta donde se encuentra el documento PDF que se debe adjuntar al XML.&#xA;        - OutputPath &lt;string&gt;: Ruta donde se almacenará el fichero XML generado.&#xA;        - TotalAmmount &lt;string&gt;: Importe total de todas las facturas incluidas.&#xA;        - InvoicesCount &lt;string&gt;: Número de facturas que se incluirán en el documento&#xA;        - InvoiceCurencyCode &lt;string&gt;: Código de la moneda en la que están definidas las cantidades de la factura.&#xA;        - InvoiceIssuerType &lt;string&gt;: Tipo de emisor de la factura.&#xA;        - BatchIdentifier &lt;string&gt;: Identificador del grupo de facturas.&#xA;&#xA;  &#xA;******** SALIDAS ********&#xA;Este módulo no tiene salida." DisplayName="CreateXML_Avoris" sap:VirtualizedContainerService.HintSize="609,3835" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="sx:XmlDocument" Name="doc" />
      <Variable x:TypeArguments="x:String" Name="str_json" />
      <Variable x:TypeArguments="njl:JObject" Name="JsonObj" />
      <Variable x:TypeArguments="x:String" Name="BaseFilename" />
      <Variable x:TypeArguments="sxl:XElement" Name="TaxesOutputs" />
      <Variable x:TypeArguments="sd:DataTable" Name="prueba" />
      <Variable x:TypeArguments="sxl:XElement" Name="Tax" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Data" />
      <Variable x:TypeArguments="sxl:XElement" Name="Items" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:IfElseIf DisplayName="Else If" sap:VirtualizedContainerService.HintSize="547,819" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
      <ui:IfElseIf.ConditionBlocks>
        <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
          <ui:IfElseIfBlock BlockType="If" Condition="[in_Debug]">
            <ui:IfElseIfBlock.Then>
              <Sequence DisplayName="Initialize Debug" sap:VirtualizedContainerService.HintSize="496,394" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="dt_Taxes" />
                  <Variable x:TypeArguments="sd:DataTable" Name="dt_Items" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:BuildDataTable DataTable="[dt_Taxes]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;str_TaxTypeCode&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;dbl_TaxableBase&quot; msdata:Caption=&quot;&quot; type=&quot;xs:double&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;dbl_TaxRate&quot; msdata:Caption=&quot;&quot; type=&quot;xs:double&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;dbl_TaxAmount&quot; msdata:Caption=&quot;&quot; type=&quot;xs:double&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;str_TaxTypeCode&gt;Prueba 1&lt;/str_TaxTypeCode&gt;&#xA;    &lt;dbl_TaxableBase&gt;20&lt;/dbl_TaxableBase&gt;&#xA;    &lt;dbl_TaxRate&gt;0.1&lt;/dbl_TaxRate&gt;&#xA;    &lt;dbl_TaxAmount&gt;2&lt;/dbl_TaxAmount&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;str_TaxTypeCode&gt;Prueba 2&lt;/str_TaxTypeCode&gt;&#xA;    &lt;dbl_TaxableBase&gt;30&lt;/dbl_TaxableBase&gt;&#xA;    &lt;dbl_TaxRate&gt;0.2&lt;/dbl_TaxRate&gt;&#xA;    &lt;dbl_TaxAmount&gt;6&lt;/dbl_TaxAmount&gt;&#xA;  &lt;/TableName&gt;&#xA;&lt;/NewDataSet&gt;" />
                <ui:BuildDataTable DataTable="[dT_Items]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;str_ItemsDescription&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;str_DeliveryNoteNumber&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;str_ItemsDescription&gt;Descripción 1&lt;/str_ItemsDescription&gt;&#xA;    &lt;str_DeliveryNoteNumber&gt;Entrega 1&lt;/str_DeliveryNoteNumber&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;str_ItemsDescription&gt;Descripción 2&lt;/str_ItemsDescription&gt;&#xA;    &lt;str_DeliveryNoteNumber&gt;Entrega 2&lt;/str_DeliveryNoteNumber&gt;&#xA;  &lt;/TableName&gt;&#xA;&lt;/NewDataSet&gt;" />
                <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_12">
                  <Assign.To>
                    <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[Data]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" xml:space="preserve">[New Dictionary(Of String, Object) From {
	{"str_SchemaVersion", "3.2"},
	{"str_Modality", "I"},
	{"int_InvoicesCount", 1},
	{"dbl_TotalInvoicesAmount", 100.20},
	{"str_InvoiceCurrencyCode","[EUR]"},
	{"str_InvoiceIssuerType", "EM"},
	{"str_SellerTaxIdentificationNumber", "B12345678"},
	{"str_SellerPersonTypeCode", "J"},
	{"str_SellerResidenceTypeCode", "R"},
	{"str_BuyerTaxIdentificationNumber", "A12345678"},
	{"str_BuyerPersonTypeCode", "J"},
	{"str_BuyerResidenceTypeCode", "R"},
	{"str_LanguageName", "[es]"},
	{"date_IssueDate", New DateTime(2023,2,27)},
	{"str_TaxCurrencyCode", "[EUR]"},
	{"str_InvoiceDocumentType","FC" },
	{"str_InvoiceClass", "OO"},
	{"date_InstallmentDueDate", New DateTime(2024, 2,1)},
	{"str_InvoiceNumber", "asd-123456"},
	{"str_CorrectiveInvoiceNumber", "zxc\12345"}, 
	{"dt_Items", dt_Items},
	{"dt_Taxes", dt_Taxes},
	{"dbl_InvoiceTotal", 2000.32}, 
	{"dbl_TotalGrossAmount", 534.43},
	{"dbl_TotalTaxOutputs", 345.22},
	{"str_RutaFichero", "C:\Users\AugustoGonzalez-RPA\Downloads\Esquema_castellano_v3_2_x_06_06_2017_unificado.pdf"}
}]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ui:IfElseIfBlock.Then>
          </ui:IfElseIfBlock>
          <ui:IfElseIfBlock BlockType="Else">
            <ui:IfElseIfBlock.Then>
              <Sequence DisplayName="Initialize not Debug" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[Data]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[in_Data]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ui:IfElseIfBlock.Then>
          </ui:IfElseIfBlock>
        </sc:BindingList>
      </ui:IfElseIf.ConditionBlocks>
    </ui:IfElseIf>
    <Sequence DisplayName="Build Taxes" sap:VirtualizedContainerService.HintSize="547,802" sap2010:WorkflowViewState.IdRef="Sequence_6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_9">
        <Assign.To>
          <OutArgument x:TypeArguments="sxl:XElement">[TaxesOutputs]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sxl:XElement">[New XElement("TaxesOutputs")]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[CType(in_Data(&quot;dt_TaxesOutputs&quot;), DataTable)]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="434,569" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,452" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="out_Data = _&#xD;&#xA;    New XElement (&quot;Tax&quot;,&#xD;&#xA;        New XElement(&quot;TaxTypeCode&quot;, in_Data.Field(Of String)(&quot;TaxTypeCode&quot;)),&#xD;&#xA;        New XElement(&quot;TaxRate&quot;, in_Data.Field(Of Double)(&quot;TaxRate&quot;).ToString(&quot;0.00&quot;)),&#xD;&#xA;        New XElement(&quot;TaxableBase&quot;, &#xD;&#xA;            New XElement(&quot;TotalAmount&quot;, (in_Data.Field(Of Double)(&quot;TaxableBase&quot;)).ToString(&quot;0.00&quot;))&#xD;&#xA;        ),&#xD;&#xA;        New XElement(&quot;TaxAmount&quot;,&#xD;&#xA;            New XElement(&quot;TotalAmount&quot;, (in_Data.Field(Of Double)(&quot;TaxAmount&quot;)).ToString(&quot;0.00&quot;)) ' Opcional&#xD;&#xA;        )&#xD;&#xA;    )" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="338,165" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
                <ui:InvokeCode.Arguments>
                  <InArgument x:TypeArguments="sd:DataRow" x:Key="in_Data">
                    <VisualBasicValue x:TypeArguments="sd:DataRow" ExpressionText="Row" />
                  </InArgument>
                  <OutArgument x:TypeArguments="sxl:XElement" x:Key="out_Data">
                    <VisualBasicReference x:TypeArguments="sxl:XElement" ExpressionText="Tax" />
                  </OutArgument>
                </ui:InvokeCode.Arguments>
              </ui:InvokeCode>
              <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="338,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="sxl:XElement">[TaxesOutputs]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="sxl:XElement">[Tax]</InArgument>
              </InvokeMethod>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
      </ui:ForEachRow>
    </Sequence>
    <Sequence DisplayName="Build Items" sap:VirtualizedContainerService.HintSize="547,626" sap2010:WorkflowViewState.IdRef="Sequence_10">
      <Sequence.Variables>
        <Variable x:TypeArguments="sxl:XElement" Name="Items" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_13">
        <Assign.To>
          <OutArgument x:TypeArguments="sxl:XElement">[Items]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sxl:XElement">[New XElement("Items")]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[CType(in_Data(&quot;dt_Items&quot;), DataTable)]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="434,393" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,276" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <Sequence.Variables>
                <Variable x:TypeArguments="sxl:XElement" Name="InvoiceLine" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="out_Data = _&#xD;&#xA;    New XElement(&quot;InvoiceLine&quot;,&#xD;&#xA;        If(String.IsNullOrWhitespace(in_Data.Field(Of String)(&quot;str_DeliveryNoteNumber&quot;)), ' Campo Opcional&#xD;&#xA;            New XElement(&quot;str_DeliveryNoteNumber&quot;, &#xD;&#xA;                New XElement(&quot;DeliveryNote&quot;,&#xD;&#xA;                    New XElement(&quot;DeliveryNoteNumber&quot;, in_Data.Field(Of String)(&quot;str_DeliveryNoteNumber&quot;))&#xD;&#xA;                )&#xD;&#xA;            ), Nothing&#xD;&#xA;        ), &#xD;&#xA;        New XElement(&quot;ItemDescription&quot;, in_Data.Field(Of String)(&quot;str_ItemsDescription&quot;))&#xD;&#xA;    )" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="338,165" sap2010:WorkflowViewState.IdRef="InvokeCode_4">
                <ui:InvokeCode.Arguments>
                  <InArgument x:TypeArguments="sd:DataRow" x:Key="in_Data">
                    <VisualBasicValue x:TypeArguments="sd:DataRow" ExpressionText="Row" />
                  </InArgument>
                  <OutArgument x:TypeArguments="sxl:XElement" x:Key="out_Data">
                    <VisualBasicReference x:TypeArguments="sxl:XElement" ExpressionText="InvoiceLine" />
                  </OutArgument>
                </ui:InvokeCode.Arguments>
              </ui:InvokeCode>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
      </ui:ForEachRow>
    </Sequence>
    <ui:InvokeCode Code="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="547,165" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Data">
          <VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Data" />
        </InArgument>
        <InArgument x:TypeArguments="sxl:XElement" x:Key="in_TaxesOutputs">
          <VisualBasicValue x:TypeArguments="sxl:XElement" ExpressionText="TaxesOutputs" />
        </InArgument>
        <InArgument x:TypeArguments="sxl:XElement" x:Key="in_Items">
          <VisualBasicValue x:TypeArguments="sxl:XElement" ExpressionText="Items" />
        </InArgument>
        <OutArgument x:TypeArguments="sxl:XDocument" x:Key="out_Data" />
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="547,92" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[TaxesOutputs.ToString]" />
    <Assign sap2010:Annotation.AnnotationText="Para crear el nombre del fichero, se quitarán todos los caractéres que no sean alfanuméricos o guion bajo." sap:VirtualizedContainerService.HintSize="547,125" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[BaseFilename]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String" xml:space="preserve">[System.Text.RegularExpressions.Regex.Replace(in_Data("BatchIdentifier").ToString, 
	"[^a-zA-Z0-9_]", String.Empty)]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="547,92" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[BaseFilename]" />
    <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File" FileName="[BaseFilename]" sap:VirtualizedContainerService.HintSize="547,133" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[doc.OuterXml]" />
    <Assign DisplayName="Initialize out data" sap:VirtualizedContainerService.HintSize="547,82" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[out_Data]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[New dictionary(Of String, Object)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:MultipleAssign DisplayName="Set output data" sap:VirtualizedContainerService.HintSize="547,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Object">[out_Data("BaseFilename")]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Object">[BaseFilename]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
  </Sequence>
</Activity>